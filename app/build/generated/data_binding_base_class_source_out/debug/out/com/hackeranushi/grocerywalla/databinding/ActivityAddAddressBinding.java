// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.hackeranushi.grocerywalla.R;
import com.skydoves.elasticviews.ElasticButton;
import com.skydoves.elasticviews.ElasticFloatingActionButton;
import com.skydoves.elasticviews.ElasticImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddAddressBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText addAddressHouseNo;

  @NonNull
  public final TextInputEditText addAddressLocation;

  @NonNull
  public final TextInputEditText addAddressSociety;

  @NonNull
  public final TextInputEditText addAddressUserName;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView currentLocation;

  @NonNull
  public final LinearLayout mapLayout;

  @NonNull
  public final ElasticFloatingActionButton myLocation;

  @NonNull
  public final ElasticButton saveButton;

  @NonNull
  public final ElasticImageView searchButton;

  @NonNull
  public final LinearLayout searchLocation;

  @NonNull
  public final EditText searchLocationEditText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddAddressBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText addAddressHouseNo, @NonNull TextInputEditText addAddressLocation,
      @NonNull TextInputEditText addAddressSociety, @NonNull TextInputEditText addAddressUserName,
      @NonNull AppBarLayout appBar, @NonNull TextView currentLocation,
      @NonNull LinearLayout mapLayout, @NonNull ElasticFloatingActionButton myLocation,
      @NonNull ElasticButton saveButton, @NonNull ElasticImageView searchButton,
      @NonNull LinearLayout searchLocation, @NonNull EditText searchLocationEditText,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addAddressHouseNo = addAddressHouseNo;
    this.addAddressLocation = addAddressLocation;
    this.addAddressSociety = addAddressSociety;
    this.addAddressUserName = addAddressUserName;
    this.appBar = appBar;
    this.currentLocation = currentLocation;
    this.mapLayout = mapLayout;
    this.myLocation = myLocation;
    this.saveButton = saveButton;
    this.searchButton = searchButton;
    this.searchLocation = searchLocation;
    this.searchLocationEditText = searchLocationEditText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAddress_house_no;
      TextInputEditText addAddressHouseNo = ViewBindings.findChildViewById(rootView, id);
      if (addAddressHouseNo == null) {
        break missingId;
      }

      id = R.id.addAddress_location;
      TextInputEditText addAddressLocation = ViewBindings.findChildViewById(rootView, id);
      if (addAddressLocation == null) {
        break missingId;
      }

      id = R.id.addAddress_society;
      TextInputEditText addAddressSociety = ViewBindings.findChildViewById(rootView, id);
      if (addAddressSociety == null) {
        break missingId;
      }

      id = R.id.addAddress_user_name;
      TextInputEditText addAddressUserName = ViewBindings.findChildViewById(rootView, id);
      if (addAddressUserName == null) {
        break missingId;
      }

      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.current_location;
      TextView currentLocation = ViewBindings.findChildViewById(rootView, id);
      if (currentLocation == null) {
        break missingId;
      }

      id = R.id.mapLayout;
      LinearLayout mapLayout = ViewBindings.findChildViewById(rootView, id);
      if (mapLayout == null) {
        break missingId;
      }

      id = R.id.my_location;
      ElasticFloatingActionButton myLocation = ViewBindings.findChildViewById(rootView, id);
      if (myLocation == null) {
        break missingId;
      }

      id = R.id.save_button;
      ElasticButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.search_button;
      ElasticImageView searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.search_location;
      LinearLayout searchLocation = ViewBindings.findChildViewById(rootView, id);
      if (searchLocation == null) {
        break missingId;
      }

      id = R.id.search_location_editText;
      EditText searchLocationEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchLocationEditText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddAddressBinding((RelativeLayout) rootView, addAddressHouseNo,
          addAddressLocation, addAddressSociety, addAddressUserName, appBar, currentLocation,
          mapLayout, myLocation, saveButton, searchButton, searchLocation, searchLocationEditText,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
