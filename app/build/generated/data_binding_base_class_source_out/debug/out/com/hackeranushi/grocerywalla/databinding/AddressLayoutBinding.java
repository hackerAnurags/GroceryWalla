// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import com.skydoves.elasticviews.ElasticImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddressLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addresStreetSociety;

  @NonNull
  public final TextView addressHouseNo;

  @NonNull
  public final TextView addressLocality;

  @NonNull
  public final ElasticImageView addressMore;

  @NonNull
  public final TextView addressNickname;

  @NonNull
  public final TextView addressUserName;

  private AddressLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView addresStreetSociety, @NonNull TextView addressHouseNo,
      @NonNull TextView addressLocality, @NonNull ElasticImageView addressMore,
      @NonNull TextView addressNickname, @NonNull TextView addressUserName) {
    this.rootView = rootView;
    this.addresStreetSociety = addresStreetSociety;
    this.addressHouseNo = addressHouseNo;
    this.addressLocality = addressLocality;
    this.addressMore = addressMore;
    this.addressNickname = addressNickname;
    this.addressUserName = addressUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddressLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.address_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddressLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addres_street_society;
      TextView addresStreetSociety = ViewBindings.findChildViewById(rootView, id);
      if (addresStreetSociety == null) {
        break missingId;
      }

      id = R.id.address_houseNo;
      TextView addressHouseNo = ViewBindings.findChildViewById(rootView, id);
      if (addressHouseNo == null) {
        break missingId;
      }

      id = R.id.address_locality;
      TextView addressLocality = ViewBindings.findChildViewById(rootView, id);
      if (addressLocality == null) {
        break missingId;
      }

      id = R.id.address_more;
      ElasticImageView addressMore = ViewBindings.findChildViewById(rootView, id);
      if (addressMore == null) {
        break missingId;
      }

      id = R.id.address_nickname;
      TextView addressNickname = ViewBindings.findChildViewById(rootView, id);
      if (addressNickname == null) {
        break missingId;
      }

      id = R.id.address_userName;
      TextView addressUserName = ViewBindings.findChildViewById(rootView, id);
      if (addressUserName == null) {
        break missingId;
      }

      return new AddressLayoutBinding((LinearLayout) rootView, addresStreetSociety, addressHouseNo,
          addressLocality, addressMore, addressNickname, addressUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
