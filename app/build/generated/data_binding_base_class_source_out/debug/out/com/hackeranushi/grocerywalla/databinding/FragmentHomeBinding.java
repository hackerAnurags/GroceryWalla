// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.hackeranushi.grocerywalla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final RecyclerView categoryRecycler;

  @NonNull
  public final RecyclerView eightRecycle;

  @NonNull
  public final RecyclerView eleventhRecycler;

  @NonNull
  public final RecyclerView fifthRecycle;

  @NonNull
  public final RecyclerView forthRecycle;

  @NonNull
  public final ViewPager homeViewpager;

  @NonNull
  public final CircleIndicator indicator2;

  @NonNull
  public final LinearLayout line3;

  @NonNull
  public final ImageView locationBtn;

  @NonNull
  public final TextView locationText;

  @NonNull
  public final RecyclerView ninthRecycle;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final RecyclerView secondRecycle;

  @NonNull
  public final RecyclerView seventhRecycle;

  @NonNull
  public final RecyclerView sixthRecycle;

  @NonNull
  public final RecyclerView tenthRecycle;

  @NonNull
  public final RecyclerView thirdRecycle;

  @NonNull
  public final RecyclerView twelveRecycler;

  private FragmentHomeBinding(@NonNull FrameLayout rootView, @NonNull RecyclerView categoryRecycler,
      @NonNull RecyclerView eightRecycle, @NonNull RecyclerView eleventhRecycler,
      @NonNull RecyclerView fifthRecycle, @NonNull RecyclerView forthRecycle,
      @NonNull ViewPager homeViewpager, @NonNull CircleIndicator indicator2,
      @NonNull LinearLayout line3, @NonNull ImageView locationBtn, @NonNull TextView locationText,
      @NonNull RecyclerView ninthRecycle, @NonNull NestedScrollView scrollView,
      @NonNull SearchView searchView, @NonNull RecyclerView secondRecycle,
      @NonNull RecyclerView seventhRecycle, @NonNull RecyclerView sixthRecycle,
      @NonNull RecyclerView tenthRecycle, @NonNull RecyclerView thirdRecycle,
      @NonNull RecyclerView twelveRecycler) {
    this.rootView = rootView;
    this.categoryRecycler = categoryRecycler;
    this.eightRecycle = eightRecycle;
    this.eleventhRecycler = eleventhRecycler;
    this.fifthRecycle = fifthRecycle;
    this.forthRecycle = forthRecycle;
    this.homeViewpager = homeViewpager;
    this.indicator2 = indicator2;
    this.line3 = line3;
    this.locationBtn = locationBtn;
    this.locationText = locationText;
    this.ninthRecycle = ninthRecycle;
    this.scrollView = scrollView;
    this.searchView = searchView;
    this.secondRecycle = secondRecycle;
    this.seventhRecycle = seventhRecycle;
    this.sixthRecycle = sixthRecycle;
    this.tenthRecycle = tenthRecycle;
    this.thirdRecycle = thirdRecycle;
    this.twelveRecycler = twelveRecycler;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryRecycler;
      RecyclerView categoryRecycler = ViewBindings.findChildViewById(rootView, id);
      if (categoryRecycler == null) {
        break missingId;
      }

      id = R.id.eightRecycle;
      RecyclerView eightRecycle = ViewBindings.findChildViewById(rootView, id);
      if (eightRecycle == null) {
        break missingId;
      }

      id = R.id.eleventhRecycler;
      RecyclerView eleventhRecycler = ViewBindings.findChildViewById(rootView, id);
      if (eleventhRecycler == null) {
        break missingId;
      }

      id = R.id.fifthRecycle;
      RecyclerView fifthRecycle = ViewBindings.findChildViewById(rootView, id);
      if (fifthRecycle == null) {
        break missingId;
      }

      id = R.id.forthRecycle;
      RecyclerView forthRecycle = ViewBindings.findChildViewById(rootView, id);
      if (forthRecycle == null) {
        break missingId;
      }

      id = R.id.home_viewpager;
      ViewPager homeViewpager = ViewBindings.findChildViewById(rootView, id);
      if (homeViewpager == null) {
        break missingId;
      }

      id = R.id.indicator2;
      CircleIndicator indicator2 = ViewBindings.findChildViewById(rootView, id);
      if (indicator2 == null) {
        break missingId;
      }

      id = R.id.line3;
      LinearLayout line3 = ViewBindings.findChildViewById(rootView, id);
      if (line3 == null) {
        break missingId;
      }

      id = R.id.locationBtn;
      ImageView locationBtn = ViewBindings.findChildViewById(rootView, id);
      if (locationBtn == null) {
        break missingId;
      }

      id = R.id.locationText;
      TextView locationText = ViewBindings.findChildViewById(rootView, id);
      if (locationText == null) {
        break missingId;
      }

      id = R.id.ninthRecycle;
      RecyclerView ninthRecycle = ViewBindings.findChildViewById(rootView, id);
      if (ninthRecycle == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.secondRecycle;
      RecyclerView secondRecycle = ViewBindings.findChildViewById(rootView, id);
      if (secondRecycle == null) {
        break missingId;
      }

      id = R.id.seventhRecycle;
      RecyclerView seventhRecycle = ViewBindings.findChildViewById(rootView, id);
      if (seventhRecycle == null) {
        break missingId;
      }

      id = R.id.sixthRecycle;
      RecyclerView sixthRecycle = ViewBindings.findChildViewById(rootView, id);
      if (sixthRecycle == null) {
        break missingId;
      }

      id = R.id.tenthRecycle;
      RecyclerView tenthRecycle = ViewBindings.findChildViewById(rootView, id);
      if (tenthRecycle == null) {
        break missingId;
      }

      id = R.id.thirdRecycle;
      RecyclerView thirdRecycle = ViewBindings.findChildViewById(rootView, id);
      if (thirdRecycle == null) {
        break missingId;
      }

      id = R.id.twelveRecycler;
      RecyclerView twelveRecycler = ViewBindings.findChildViewById(rootView, id);
      if (twelveRecycler == null) {
        break missingId;
      }

      return new FragmentHomeBinding((FrameLayout) rootView, categoryRecycler, eightRecycle,
          eleventhRecycler, fifthRecycle, forthRecycle, homeViewpager, indicator2, line3,
          locationBtn, locationText, ninthRecycle, scrollView, searchView, secondRecycle,
          seventhRecycle, sixthRecycle, tenthRecycle, thirdRecycle, twelveRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
