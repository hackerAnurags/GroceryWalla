// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView customerCareDetails;

  @NonNull
  public final TextView disclaimer;

  @NonNull
  public final TextView manufactureDetails;

  @NonNull
  public final TextView markedBy;

  @NonNull
  public final TextView origin;

  @NonNull
  public final TextView seller;

  @NonNull
  public final TextView shelfLife;

  private FragmentInfoBinding(@NonNull FrameLayout rootView, @NonNull TextView customerCareDetails,
      @NonNull TextView disclaimer, @NonNull TextView manufactureDetails,
      @NonNull TextView markedBy, @NonNull TextView origin, @NonNull TextView seller,
      @NonNull TextView shelfLife) {
    this.rootView = rootView;
    this.customerCareDetails = customerCareDetails;
    this.disclaimer = disclaimer;
    this.manufactureDetails = manufactureDetails;
    this.markedBy = markedBy;
    this.origin = origin;
    this.seller = seller;
    this.shelfLife = shelfLife;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customer_care_details;
      TextView customerCareDetails = ViewBindings.findChildViewById(rootView, id);
      if (customerCareDetails == null) {
        break missingId;
      }

      id = R.id.disclaimer;
      TextView disclaimer = ViewBindings.findChildViewById(rootView, id);
      if (disclaimer == null) {
        break missingId;
      }

      id = R.id.manufacture_details;
      TextView manufactureDetails = ViewBindings.findChildViewById(rootView, id);
      if (manufactureDetails == null) {
        break missingId;
      }

      id = R.id.markedBy;
      TextView markedBy = ViewBindings.findChildViewById(rootView, id);
      if (markedBy == null) {
        break missingId;
      }

      id = R.id.origin;
      TextView origin = ViewBindings.findChildViewById(rootView, id);
      if (origin == null) {
        break missingId;
      }

      id = R.id.seller;
      TextView seller = ViewBindings.findChildViewById(rootView, id);
      if (seller == null) {
        break missingId;
      }

      id = R.id.shelf_life;
      TextView shelfLife = ViewBindings.findChildViewById(rootView, id);
      if (shelfLife == null) {
        break missingId;
      }

      return new FragmentInfoBinding((FrameLayout) rootView, customerCareDetails, disclaimer,
          manufactureDetails, markedBy, origin, seller, shelfLife);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
