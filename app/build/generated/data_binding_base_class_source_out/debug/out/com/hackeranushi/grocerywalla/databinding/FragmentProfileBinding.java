// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import com.skydoves.elasticviews.ElasticButton;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout aboutUs;

  @NonNull
  public final LinearLayout address;

  @NonNull
  public final LinearLayout cart;

  @NonNull
  public final LinearLayout coupons;

  @NonNull
  public final LinearLayout customerSupport;

  @NonNull
  public final TextView divider;

  @NonNull
  public final LinearLayout editProfile;

  @NonNull
  public final ElasticButton logout;

  @NonNull
  public final LinearLayout notification;

  @NonNull
  public final LinearLayout order;

  @NonNull
  public final LinearLayout privacy;

  @NonNull
  public final TextView profileEmail;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final LinearLayout profileLayout;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final LinearLayout rateUs;

  @NonNull
  public final NestedScrollView scrollView1;

  @NonNull
  public final LinearLayout setting;

  @NonNull
  public final LinearLayout share;

  @NonNull
  public final LinearLayout termsConditions;

  @NonNull
  public final LinearLayout wishlist;

  private FragmentProfileBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout aboutUs,
      @NonNull LinearLayout address, @NonNull LinearLayout cart, @NonNull LinearLayout coupons,
      @NonNull LinearLayout customerSupport, @NonNull TextView divider,
      @NonNull LinearLayout editProfile, @NonNull ElasticButton logout,
      @NonNull LinearLayout notification, @NonNull LinearLayout order,
      @NonNull LinearLayout privacy, @NonNull TextView profileEmail,
      @NonNull CircleImageView profileImage, @NonNull LinearLayout profileLayout,
      @NonNull TextView profileName, @NonNull LinearLayout rateUs,
      @NonNull NestedScrollView scrollView1, @NonNull LinearLayout setting,
      @NonNull LinearLayout share, @NonNull LinearLayout termsConditions,
      @NonNull LinearLayout wishlist) {
    this.rootView = rootView;
    this.aboutUs = aboutUs;
    this.address = address;
    this.cart = cart;
    this.coupons = coupons;
    this.customerSupport = customerSupport;
    this.divider = divider;
    this.editProfile = editProfile;
    this.logout = logout;
    this.notification = notification;
    this.order = order;
    this.privacy = privacy;
    this.profileEmail = profileEmail;
    this.profileImage = profileImage;
    this.profileLayout = profileLayout;
    this.profileName = profileName;
    this.rateUs = rateUs;
    this.scrollView1 = scrollView1;
    this.setting = setting;
    this.share = share;
    this.termsConditions = termsConditions;
    this.wishlist = wishlist;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_us;
      LinearLayout aboutUs = ViewBindings.findChildViewById(rootView, id);
      if (aboutUs == null) {
        break missingId;
      }

      id = R.id.address;
      LinearLayout address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.cart;
      LinearLayout cart = ViewBindings.findChildViewById(rootView, id);
      if (cart == null) {
        break missingId;
      }

      id = R.id.coupons;
      LinearLayout coupons = ViewBindings.findChildViewById(rootView, id);
      if (coupons == null) {
        break missingId;
      }

      id = R.id.customer_support;
      LinearLayout customerSupport = ViewBindings.findChildViewById(rootView, id);
      if (customerSupport == null) {
        break missingId;
      }

      id = R.id.divider;
      TextView divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.edit_profile;
      LinearLayout editProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfile == null) {
        break missingId;
      }

      id = R.id.logout;
      ElasticButton logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.notification;
      LinearLayout notification = ViewBindings.findChildViewById(rootView, id);
      if (notification == null) {
        break missingId;
      }

      id = R.id.order;
      LinearLayout order = ViewBindings.findChildViewById(rootView, id);
      if (order == null) {
        break missingId;
      }

      id = R.id.privacy;
      LinearLayout privacy = ViewBindings.findChildViewById(rootView, id);
      if (privacy == null) {
        break missingId;
      }

      id = R.id.profile_email;
      TextView profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profileLayout;
      LinearLayout profileLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileLayout == null) {
        break missingId;
      }

      id = R.id.profile_name;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.rate_us;
      LinearLayout rateUs = ViewBindings.findChildViewById(rootView, id);
      if (rateUs == null) {
        break missingId;
      }

      id = R.id.scroll_view1;
      NestedScrollView scrollView1 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView1 == null) {
        break missingId;
      }

      id = R.id.setting;
      LinearLayout setting = ViewBindings.findChildViewById(rootView, id);
      if (setting == null) {
        break missingId;
      }

      id = R.id.share;
      LinearLayout share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.terms_conditions;
      LinearLayout termsConditions = ViewBindings.findChildViewById(rootView, id);
      if (termsConditions == null) {
        break missingId;
      }

      id = R.id.wishlist;
      LinearLayout wishlist = ViewBindings.findChildViewById(rootView, id);
      if (wishlist == null) {
        break missingId;
      }

      return new FragmentProfileBinding((FrameLayout) rootView, aboutUs, address, cart, coupons,
          customerSupport, divider, editProfile, logout, notification, order, privacy, profileEmail,
          profileImage, profileLayout, profileName, rateUs, scrollView1, setting, share,
          termsConditions, wishlist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
