// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRatingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button feedbackSubmit;

  @NonNull
  public final TextView rating;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final LinearLayout ratingLayout;

  @NonNull
  public final RecyclerView ratingRecycle;

  @NonNull
  public final EditText userFeedback;

  @NonNull
  public final TextView userRatingText;

  private FragmentRatingBinding(@NonNull FrameLayout rootView, @NonNull Button feedbackSubmit,
      @NonNull TextView rating, @NonNull RatingBar ratingBar, @NonNull LinearLayout ratingLayout,
      @NonNull RecyclerView ratingRecycle, @NonNull EditText userFeedback,
      @NonNull TextView userRatingText) {
    this.rootView = rootView;
    this.feedbackSubmit = feedbackSubmit;
    this.rating = rating;
    this.ratingBar = ratingBar;
    this.ratingLayout = ratingLayout;
    this.ratingRecycle = ratingRecycle;
    this.userFeedback = userFeedback;
    this.userRatingText = userRatingText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRatingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRatingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rating, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRatingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feedback_submit;
      Button feedbackSubmit = ViewBindings.findChildViewById(rootView, id);
      if (feedbackSubmit == null) {
        break missingId;
      }

      id = R.id.rating;
      TextView rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.rating_layout;
      LinearLayout ratingLayout = ViewBindings.findChildViewById(rootView, id);
      if (ratingLayout == null) {
        break missingId;
      }

      id = R.id.rating_recycle;
      RecyclerView ratingRecycle = ViewBindings.findChildViewById(rootView, id);
      if (ratingRecycle == null) {
        break missingId;
      }

      id = R.id.user_feedback;
      EditText userFeedback = ViewBindings.findChildViewById(rootView, id);
      if (userFeedback == null) {
        break missingId;
      }

      id = R.id.user_rating_text;
      TextView userRatingText = ViewBindings.findChildViewById(rootView, id);
      if (userRatingText == null) {
        break missingId;
      }

      return new FragmentRatingBinding((FrameLayout) rootView, feedbackSubmit, rating, ratingBar,
          ratingLayout, ratingRecycle, userFeedback, userRatingText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
