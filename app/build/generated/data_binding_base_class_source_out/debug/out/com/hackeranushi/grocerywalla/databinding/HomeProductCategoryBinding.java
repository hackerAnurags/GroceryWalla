// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeProductCategoryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView categoryProductImage;

  @NonNull
  public final TextView categoryProductName;

  @NonNull
  public final LinearLayout line;

  private HomeProductCategoryBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView categoryProductImage, @NonNull TextView categoryProductName,
      @NonNull LinearLayout line) {
    this.rootView = rootView;
    this.categoryProductImage = categoryProductImage;
    this.categoryProductName = categoryProductName;
    this.line = line;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeProductCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeProductCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_product_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeProductCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_product_image;
      ImageView categoryProductImage = ViewBindings.findChildViewById(rootView, id);
      if (categoryProductImage == null) {
        break missingId;
      }

      id = R.id.category_product_name;
      TextView categoryProductName = ViewBindings.findChildViewById(rootView, id);
      if (categoryProductName == null) {
        break missingId;
      }

      id = R.id.line;
      LinearLayout line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      return new HomeProductCategoryBinding((RelativeLayout) rootView, categoryProductImage,
          categoryProductName, line);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
