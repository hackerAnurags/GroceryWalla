// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRatingBar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import com.skydoves.elasticviews.ElasticButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RatingActivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView feedbackDate;

  @NonNull
  public final ElasticButton likeButton;

  @NonNull
  public final LinearLayout line;

  @NonNull
  public final AppCompatRatingBar ratingBar;

  @NonNull
  public final TextView sellerTag;

  @NonNull
  public final TextView user;

  @NonNull
  public final TextView userFeedback;

  @NonNull
  public final TextView userTag;

  private RatingActivityBinding(@NonNull RelativeLayout rootView, @NonNull TextView feedbackDate,
      @NonNull ElasticButton likeButton, @NonNull LinearLayout line,
      @NonNull AppCompatRatingBar ratingBar, @NonNull TextView sellerTag, @NonNull TextView user,
      @NonNull TextView userFeedback, @NonNull TextView userTag) {
    this.rootView = rootView;
    this.feedbackDate = feedbackDate;
    this.likeButton = likeButton;
    this.line = line;
    this.ratingBar = ratingBar;
    this.sellerTag = sellerTag;
    this.user = user;
    this.userFeedback = userFeedback;
    this.userTag = userTag;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RatingActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RatingActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rating_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RatingActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feedback_date;
      TextView feedbackDate = ViewBindings.findChildViewById(rootView, id);
      if (feedbackDate == null) {
        break missingId;
      }

      id = R.id.like_button;
      ElasticButton likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.line;
      LinearLayout line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      AppCompatRatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.seller_tag;
      TextView sellerTag = ViewBindings.findChildViewById(rootView, id);
      if (sellerTag == null) {
        break missingId;
      }

      id = R.id.user;
      TextView user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      id = R.id.user_feedback;
      TextView userFeedback = ViewBindings.findChildViewById(rootView, id);
      if (userFeedback == null) {
        break missingId;
      }

      id = R.id.user_tag;
      TextView userTag = ViewBindings.findChildViewById(rootView, id);
      if (userTag == null) {
        break missingId;
      }

      return new RatingActivityBinding((RelativeLayout) rootView, feedbackDate, likeButton, line,
          ratingBar, sellerTag, user, userFeedback, userTag);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
