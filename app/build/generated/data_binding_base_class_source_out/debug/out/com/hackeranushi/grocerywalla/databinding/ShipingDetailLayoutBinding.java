// Generated by view binder compiler. Do not edit!
package com.hackeranushi.grocerywalla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hackeranushi.grocerywalla.R;
import com.skydoves.elasticviews.ElasticButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShipingDetailLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ElasticButton changeAddress;

  @NonNull
  public final TextView shippingAddress;

  @NonNull
  public final TextView shippingName;

  @NonNull
  public final TextView shippingPhoneNo;

  @NonNull
  public final TextView shippingPinCode;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  private ShipingDetailLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ElasticButton changeAddress, @NonNull TextView shippingAddress,
      @NonNull TextView shippingName, @NonNull TextView shippingPhoneNo,
      @NonNull TextView shippingPinCode, @NonNull TextView textView6, @NonNull TextView textView7) {
    this.rootView = rootView;
    this.changeAddress = changeAddress;
    this.shippingAddress = shippingAddress;
    this.shippingName = shippingName;
    this.shippingPhoneNo = shippingPhoneNo;
    this.shippingPinCode = shippingPinCode;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShipingDetailLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShipingDetailLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.shiping_detail_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShipingDetailLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.change_address;
      ElasticButton changeAddress = ViewBindings.findChildViewById(rootView, id);
      if (changeAddress == null) {
        break missingId;
      }

      id = R.id.shipping_address;
      TextView shippingAddress = ViewBindings.findChildViewById(rootView, id);
      if (shippingAddress == null) {
        break missingId;
      }

      id = R.id.shipping_name;
      TextView shippingName = ViewBindings.findChildViewById(rootView, id);
      if (shippingName == null) {
        break missingId;
      }

      id = R.id.shipping_phone_no;
      TextView shippingPhoneNo = ViewBindings.findChildViewById(rootView, id);
      if (shippingPhoneNo == null) {
        break missingId;
      }

      id = R.id.shipping_pin_code;
      TextView shippingPinCode = ViewBindings.findChildViewById(rootView, id);
      if (shippingPinCode == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new ShipingDetailLayoutBinding((RelativeLayout) rootView, changeAddress,
          shippingAddress, shippingName, shippingPhoneNo, shippingPinCode, textView6, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
